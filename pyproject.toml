[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "torchrec-kgcn"
description = "PyTorch with TorchRec implementation of Knowledge Graph Convolutional Networks for Recommender Systems"
readme = "README.md"
requires-python = ">=3.9"
authors = [{ name = "Kanchi Shimono", email = "dev.kanchi.shimono@gmail.com" }]
maintainers = [
  { name = "Kanchi Shimono", email = "dev.kanchi.shimono@gmail.com" },
]
keywords = [
  "recommendation",
  "recommendation systems",
  "recommender systems",
  "pytorch",
  "torchrec",
  "sharding",
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: GPU :: NVIDIA CUDA",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = ["torch>=1.12.0", "torchrec"]
dynamic = ["version"]

[project.urls]
homepage = "https://github.com/KanchiShimono/torchrec-KGCN"

[project.optional-dependencies]
dev = ["flake8", "black", "isort", "mypy"]

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.dynamic]
version = { attr = "torchrec_kgcn.version.__version__" }

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 100
skip-string-normalization = true
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 100
ensure_newline_before_comments = true
known_first_party = "torchrec_kgcn"

[tool.mypy]
namespace_packages = true
show_column_numbers = true
ignore_missing_imports = true
# The fllowing options are enabled by --strict option
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["torch", "torch.*"]
no_implicit_reexport = false

[tool.pyright]
include = ["src", "tests"]
exclude = ["**/__pycache__"]
strictListInference = true
strictDictionaryInference = true
strictParameterNoneValue = true
reportMissingImports = true
reportMissingTypeStubs = false
reportUnusedImport = true
reportUnusedClass = true
reportUnusedFunction = true
reportUnusedVariable = true
reportDuplicateImport = true
executionEnvironments = [
  { "root" = "src" },
  { "root" = "tests", "extraPaths" = [ "src" ] },
]
